name: Publish Docker image

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    env:
      N8N_DOMAIN: "nochon.autosystemprojects.site" # <-- Cambia tu dominio aquÃ­
      N8N_PORT: "8023" # <-- Cambia tu puerto aquÃ­
      LETSENCRYPT_EMAIL: "admin_1@autosystemprojects.site" # <-- Cambia tu email aquÃ­

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/n8n-custom
          tags: |
            type=sha,prefix=,suffix=,format=short
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            N8N_PORT=${{ env.N8N_PORT }}

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_KEY }}
          script: |
            # Variables de entorno
            export IMAGE_LATEST_TAG=${{ secrets.DOCKERHUB_USERNAME }}/n8n-custom:latest
            export CONTAINER_NAME=n8n-custom
            export DOMAIN=${{ env.N8N_DOMAIN }}
            export PORT=${{ env.N8N_PORT }}
            export EMAIL=${{ env.LETSENCRYPT_EMAIL }}

            # Detener y eliminar el contenedor existente
            if [ $(docker ps -a -q -f name=^/${CONTAINER_NAME}$) ]; then
              docker stop $CONTAINER_NAME
              docker rm $CONTAINER_NAME
            fi

            # Pull de la imagen mÃ¡s reciente
            docker pull $IMAGE_LATEST_TAG

            # Ejecutar el nuevo contenedor
            docker run -d \
              --name $CONTAINER_NAME \
              --restart always \
              -p $PORT:$PORT \
              -e N8N_HOST="$DOMAIN" \
              -e N8N_PORT="$PORT" \
              -e VUE_APP_URL_BASE_API="https://"$DOMAIN \
              --health-cmd="curl -f http://localhost:$PORT/healthz || exit 1" \
              --health-interval=1m \
              --health-timeout=30s \
              --health-retries=3 \
              $IMAGE_LATEST_TAG

            # Configurar Nginx
            bash ~/n8n/scripts/setup-nginx.sh

            # Limpiar imÃ¡genes de Docker antiguas
            docker image prune -a -f

            echo "ðŸš€ Despliegue completado en https://$DOMAIN"
